from classes.gameClass import Game

class State:
    """
    Represents a specific snapshot of the game selection process at a given point in time.

    Each State instance holds the current collection of games yet to be processed,
    games that have been moved to a 'seen' status, and the current batch of games
    being presented to the user. It also identifies the final chosen game if the
    selection process has concluded.
    """

    def __init__(self, batch_info: tuple[list[Game], list[Game], list[Game]]) -> None:
        """
        Initializes a new State object.

        Args:
            batch_info (tuple): A tuple containing (current_batch, remaining_games, seen_games).
                                This information is generated by Session.generate_batch_info.
        """
        self.remaining_games = batch_info[1].copy()
        self.seen_games = batch_info[2].copy() 
        self.batch = batch_info[0].copy()
        self.final_pick = None  # The GUI will be checking for this before loading any new page during the picking process. If True, it should be loading 

        if len(self.batch) == 1:
            self.final_pick = self.batch[0]
        
    